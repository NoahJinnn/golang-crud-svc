// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/area": {
            "post": {
                "description": "Create area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Area",
                "parameters": [
                    {
                        "description": "Fields need to create a area",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagCreateArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Area"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete area using \"id\" field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Area By ID",
                "parameters": [
                    {
                        "description": "Area ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update area, must have \"id\" field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Area By ID",
                "parameters": [
                    {
                        "description": "Fields need to update a area",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagUpdateArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/area/{id}": {
            "get": {
                "description": "find area and doorlock info by area id",
                "produces": [
                    "application/json"
                ],
                "summary": "Find Area By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Area ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Area"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/areas": {
            "get": {
                "description": "find all areas info",
                "produces": [
                    "application/json"
                ],
                "summary": "Find All Area",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Area"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/doorlock": {
            "post": {
                "description": "Create doorlock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Doorlock",
                "parameters": [
                    {
                        "description": "Fields need to create a doorlock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagCreateDoorlock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Doorlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete doorlock using \"id\" field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Doorlock By ID",
                "parameters": [
                    {
                        "description": "Doorlock ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update doorlock, must have \"id\" field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Doorlock By ID",
                "parameters": [
                    {
                        "description": "Fields need to update a doorlock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagUpdateDoorlock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/doorlock/{id}": {
            "get": {
                "description": "find doorlock info by doorlock id",
                "produces": [
                    "application/json"
                ],
                "summary": "Find Doorlock By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Doorlock ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Doorlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/doorlocks": {
            "get": {
                "description": "find all doorlocks info",
                "produces": [
                    "application/json"
                ],
                "summary": "Find All Doorlock",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Doorlock"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/gateway": {
            "post": {
                "description": "Create gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Gateway",
                "parameters": [
                    {
                        "description": "Fields need to create a gateway",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagCreateGateway"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Gateway"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete gateway using \"id\" field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Gateway By ID",
                "parameters": [
                    {
                        "description": "Gateway ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update gateway, must have \"id\" field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Gateway By ID",
                "parameters": [
                    {
                        "description": "Fields need to update a gateway",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagUpateGateway"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/gateway/{id}": {
            "get": {
                "description": "find gateway and doorlock info by gateway id",
                "produces": [
                    "application/json"
                ],
                "summary": "Find Gateway By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gateway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Gateway"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/gateways": {
            "get": {
                "description": "find all gateways info",
                "produces": [
                    "application/json"
                ],
                "summary": "Find All Gateway",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Gateway"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Area": {
            "type": "object",
            "properties": {
                "doorlocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Doorlock"
                    }
                },
                "gateway": {
                    "$ref": "#/definitions/models.Gateway"
                },
                "id": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Doorlock": {
            "type": "object",
            "properties": {
                "areaId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lastConnectTime": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "schedulerId": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "models.Gateway": {
            "type": "object",
            "properties": {
                "areaId": {
                    "type": "integer"
                },
                "doorlocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Doorlock"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "lastConnectTime": {
                    "type": "string"
                },
                "macId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "models.SwagCreateArea": {
            "type": "object",
            "properties": {
                "gateway": {
                    "$ref": "#/definitions/models.Gateway"
                },
                "manager": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SwagCreateDoorlock": {
            "type": "object",
            "properties": {
                "areaId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "integer"
                },
                "lastConnectTime": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "schedulerId": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "models.SwagCreateGateway": {
            "type": "object",
            "properties": {
                "areaId": {
                    "type": "integer"
                },
                "lastConnectTime": {
                    "type": "string"
                },
                "macId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "models.SwagUpateGateway": {
            "type": "object",
            "properties": {
                "areaId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lastConnectTime": {
                    "type": "string"
                },
                "macId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "models.SwagUpdateArea": {
            "type": "object",
            "properties": {
                "gateway": {
                    "$ref": "#/definitions/models.Gateway"
                },
                "id": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SwagUpdateDoorlock": {
            "type": "object",
            "properties": {
                "areaId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lastConnectTime": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "schedulerId": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "errorMsg": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
